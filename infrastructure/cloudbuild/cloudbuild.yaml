# Elara Platform - Cloud Build for GKE Deployment
# Builds backend-api, worker, and proxy Docker images

timeout: 1800s

options:
  machineType: 'E2_HIGHCPU_8'
  logging: CLOUD_LOGGING_ONLY

substitutions:
  _PROJECT_ID: 'elara-mvp-13082025-u1'

steps:
  # ==============================================================================
  # BUILD BACKEND API IMAGE
  # ==============================================================================
  - name: 'gcr.io/cloud-builders/docker'
    id: 'build-backend-api'
    args:
      - 'build'
      - '-t'
      - 'gcr.io/${_PROJECT_ID}/backend-api:v1.0.0'
      - '-t'
      - 'gcr.io/${_PROJECT_ID}/backend-api:latest'
      - '-f'
      - 'gcp-config/docker/Dockerfile.backend'
      - '.'
    waitFor: ['-']

  # ==============================================================================
  # BUILD WORKER IMAGE
  # ==============================================================================
  - name: 'gcr.io/cloud-builders/docker'
    id: 'build-worker'
    args:
      - 'build'
      - '-t'
      - 'gcr.io/${_PROJECT_ID}/worker:v1.0.0'
      - '-t'
      - 'gcr.io/${_PROJECT_ID}/worker:latest'
      - '-f'
      - 'gcp-config/docker/Dockerfile.worker'
      - '.'
    waitFor: ['-']

  # ==============================================================================
  # BUILD PROXY SERVICE (PYTHON FLASK)
  # ==============================================================================
  - name: 'gcr.io/cloud-builders/docker'
    id: 'build-proxy'
    args:
      - 'build'
      - '-t'
      - 'gcr.io/${_PROJECT_ID}/proxy:v1.0.0'
      - '-t'
      - 'gcr.io/${_PROJECT_ID}/proxy:latest'
      - '-f'
      - 'gcp-config/docker/Dockerfile.proxy'
      - '.'
    waitFor: ['-']

  # ==============================================================================
  # BUILD FRONTEND (REACT/VITE + NGINX)
  # ==============================================================================
  - name: 'gcr.io/cloud-builders/docker'
    id: 'build-frontend'
    args:
      - 'build'
      - '--build-arg'
      - 'VITE_API_URL=http://34.36.48.252/api'
      - '-t'
      - 'gcr.io/${_PROJECT_ID}/frontend:v1.0.0'
      - '-t'
      - 'gcr.io/${_PROJECT_ID}/frontend:latest'
      - '-f'
      - 'gcp-config/docker/Dockerfile.frontend'
      - '.'
    waitFor: ['-']

  # ==============================================================================
  # DEPLOY TO GKE - AUTOMATICALLY UPDATE RUNNING SERVICES
  # ==============================================================================
  # Connect to GKE cluster
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'get-gke-credentials'
    args:
      - 'container'
      - 'clusters'
      - 'get-credentials'
      - 'elara-gke-us-west1'
      - '--region=us-west1'
      - '--project=${_PROJECT_ID}'
    waitFor: ['build-backend-api', 'build-worker', 'build-proxy', 'build-frontend']

  # Restart backend deployment (triggers pull of latest image)
  - name: 'gcr.io/cloud-builders/kubectl'
    id: 'deploy-backend'
    args:
      - 'rollout'
      - 'restart'
      - 'deployment/elara-api'
      - '-n'
      - 'elara-backend'
    env:
      - 'CLOUDSDK_COMPUTE_REGION=us-west1'
      - 'CLOUDSDK_CONTAINER_CLUSTER=elara-gke-us-west1'
    waitFor: ['get-gke-credentials']

  # Restart worker deployment
  - name: 'gcr.io/cloud-builders/kubectl'
    id: 'deploy-worker'
    args:
      - 'rollout'
      - 'restart'
      - 'deployment/elara-worker'
      - '-n'
      - 'elara-workers'
    env:
      - 'CLOUDSDK_COMPUTE_REGION=us-west1'
      - 'CLOUDSDK_CONTAINER_CLUSTER=elara-gke-us-west1'
    waitFor: ['get-gke-credentials']

  # Restart proxy deployment
  - name: 'gcr.io/cloud-builders/kubectl'
    id: 'deploy-proxy'
    args:
      - 'rollout'
      - 'restart'
      - 'deployment/elara-proxy'
      - '-n'
      - 'elara-proxy'
    env:
      - 'CLOUDSDK_COMPUTE_REGION=us-west1'
      - 'CLOUDSDK_CONTAINER_CLUSTER=elara-gke-us-west1'
    waitFor: ['get-gke-credentials']

  # Restart frontend deployment
  - name: 'gcr.io/cloud-builders/kubectl'
    id: 'deploy-frontend'
    args:
      - 'rollout'
      - 'restart'
      - 'deployment/elara-frontend'
      - '-n'
      - 'elara-frontend'
    env:
      - 'CLOUDSDK_COMPUTE_REGION=us-west1'
      - 'CLOUDSDK_CONTAINER_CLUSTER=elara-gke-us-west1'
    waitFor: ['get-gke-credentials']

# Push all images to GCR
images:
  - 'gcr.io/${_PROJECT_ID}/backend-api:v1.0.0'
  - 'gcr.io/${_PROJECT_ID}/backend-api:latest'
  - 'gcr.io/${_PROJECT_ID}/worker:v1.0.0'
  - 'gcr.io/${_PROJECT_ID}/worker:latest'
  - 'gcr.io/${_PROJECT_ID}/proxy:v1.0.0'
  - 'gcr.io/${_PROJECT_ID}/proxy:latest'
  - 'gcr.io/${_PROJECT_ID}/frontend:v1.0.0'
  - 'gcr.io/${_PROJECT_ID}/frontend:latest'
