# ==============================================================================
# ELARA BACKEND API - DEPLOYMENT
# ==============================================================================

apiVersion: apps/v1
kind: Deployment
metadata:
  name: elara-api
  namespace: elara-backend
  labels:
    app: elara-api
    component: backend
    tier: application
spec:
  replicas: 3  # Will be overridden by HPA
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: elara-api
  template:
    metadata:
      labels:
        app: elara-api
        component: backend
        tier: application
    spec:
      serviceAccountName: elara-api-sa

      # Security context
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault

      # Init container to wait for database
      initContainers:
      - name: wait-for-db
        image: busybox:1.36
        command: ['sh', '-c', 'until nc -z -v -w30 $DB_HOST 5432; do echo "Waiting for database..."; sleep 5; done']
        env:
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              name: elara-secrets
              key: db-host
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop: ["ALL"]

      containers:
      - name: api
        image: gcr.io/elara-mvp-13082025-u1/backend-api:latest
        imagePullPolicy: Always

        ports:
        - name: http
          containerPort: 3001
          protocol: TCP

        # Environment variables from ConfigMap
        envFrom:
        - configMapRef:
            name: elara-config

        # Environment variables from Secrets
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: elara-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: elara-secrets
              key: redis-url
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: elara-secrets
              key: jwt-secret
        - name: ANTHROPIC_API_KEY
          valueFrom:
            secretKeyRef:
              name: elara-secrets
              key: anthropic-api-key
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: elara-secrets
              key: openai-api-key
        - name: GOOGLE_AI_API_KEY
          valueFrom:
            secretKeyRef:
              name: elara-secrets
              key: google-ai-api-key
        - name: HUGGINGFACE_API_KEY
          valueFrom:
            secretKeyRef:
              name: elara-secrets
              key: huggingface-api-key
        - name: GROK_API_KEY
          valueFrom:
            secretKeyRef:
              name: elara-secrets
              key: grok-api-key
        - name: VIRUSTOTAL_API_KEY
          valueFrom:
            secretKeyRef:
              name: elara-secrets
              key: virustotal-api-key
        - name: GOOGLE_SAFE_BROWSING_API_KEY
          valueFrom:
            secretKeyRef:
              name: elara-secrets
              key: google-safe-browsing-api-key
        - name: ABUSEIPDB_API_KEY
          valueFrom:
            secretKeyRef:
              name: elara-secrets
              key: abuseipdb-api-key
        - name: ABSTRACT_API_KEY
          valueFrom:
            secretKeyRef:
              name: elara-secrets
              key: abstract-api-key
        - name: TWILIO_ACCOUNT_SID
          valueFrom:
            secretKeyRef:
              name: elara-secrets
              key: twilio-account-sid
        - name: TWILIO_AUTH_TOKEN
          valueFrom:
            secretKeyRef:
              name: elara-secrets
              key: twilio-auth-token
        - name: TWILIO_WHATSAPP_NUMBER
          valueFrom:
            secretKeyRef:
              name: elara-secrets
              key: twilio-whatsapp-number
        - name: WHATSAPP_ENCRYPTION_KEY
          valueFrom:
            secretKeyRef:
              name: elara-secrets
              key: whatsapp-encryption-key

        # Resource limits
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            cpu: 2000m
            memory: 2Gi

        # Health checks
        livenessProbe:
          httpGet:
            path: /health
            port: 3001
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3

        readinessProbe:
          httpGet:
            path: /health
            port: 3001
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 2

        # Security context
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:
            drop: ["ALL"]

        # Volume mounts for tmp
        volumeMounts:
        - name: tmp
          mountPath: /tmp

      volumes:
      - name: tmp
        emptyDir: {}

      # Node affinity and tolerations
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - elara-api
              topologyKey: kubernetes.io/hostname
