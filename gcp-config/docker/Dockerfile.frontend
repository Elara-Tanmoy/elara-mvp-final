# ==============================================================================
# ELARA FRONTEND - REACT/VITE WITH NGINX
# ==============================================================================
# Build from repository root: docker build -f gcp-infrastructure/docker/Dockerfile.frontend .
# ==============================================================================

# Stage 1: Build
FROM node:20-alpine AS builder

WORKDIR /build

# Accept build arguments
ARG VITE_API_URL
ARG VITE_WS_URL
ARG VITE_ENVIRONMENT

# Copy package files
COPY packages/frontend/package.json ./

# Install dependencies (matching Vercel: npm install)
RUN npm install

# Copy source code
COPY packages/frontend ./

# Build the frontend with environment variables
ENV VITE_API_URL=${VITE_API_URL}
ENV VITE_WS_URL=${VITE_WS_URL}
ENV VITE_ENVIRONMENT=${VITE_ENVIRONMENT}
RUN echo "Building with VITE_ENVIRONMENT=${VITE_ENVIRONMENT}" && npm run build

# Stage 2: Production with Nginx
FROM nginx:alpine

# Copy built files from builder
COPY --from=builder /build/dist /usr/share/nginx/html

# Copy custom nginx config for SPA routing
RUN echo 'server {' > /etc/nginx/conf.d/default.conf && \
    echo '    listen 8080;' >> /etc/nginx/conf.d/default.conf && \
    echo '    server_name _;' >> /etc/nginx/conf.d/default.conf && \
    echo '    root /usr/share/nginx/html;' >> /etc/nginx/conf.d/default.conf && \
    echo '    index index.html;' >> /etc/nginx/conf.d/default.conf && \
    echo '    location / {' >> /etc/nginx/conf.d/default.conf && \
    echo '        try_files $uri $uri/ /index.html;' >> /etc/nginx/conf.d/default.conf && \
    echo '    }' >> /etc/nginx/conf.d/default.conf && \
    echo '}' >> /etc/nginx/conf.d/default.conf

EXPOSE 8080

HEALTHCHECK --interval=30s --timeout=5s --start-period=10s --retries=3 \
  CMD wget -q --spider http://localhost:8080/ || exit 1

CMD ["nginx", "-g", "daemon off;"]
